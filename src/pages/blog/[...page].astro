---
import { type CollectionEntry, getCollection, render } from "astro:content";
import Card from "../../components/Card.astro";
import BaseHead from "../../components/BaseHead.astro";
import Footer from "../../components/Footer.astro";
import FormattedDate from "../../components/FormattedDate.astro";
import Header from "../../components/Header.astro";
import { SITE_TITLE } from "../../consts";

// getStaticPaths()で動的なルートを設定
export async function getStaticPaths({ paginate }) {
	const sortedPosts = (await getCollection("blog")).sort(
		(a, b) => b.data.date.valueOf() - a.data.date.valueOf(),
	);

	// 並び替えた投稿の配列から、1ページにX記事づつ入るようにページを生成
	return paginate(sortedPosts, {pageSize:10});
}

// paginate()関数を使用すると、各ページのデータはpageプロパティとして渡される
const { page } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} />
	</head>
	<body>
		<Header />
		<main>
			<section id="blog" class="py-12 md:py-20 bg-white">
				<div class="container mx-auto px-6">
					<div class="grid md:grid-cols-2 gap-8">
						{
							page.data.map((post) => (
								<Card
									title={post.data.title}
									date={post.data.date}
									id={post.id}
								/>
							))
						}
					</div>
				</div>
			</section>

			<nav class="flex justify-between mt-16 items-center">
				<div class="text-left">
					{
						page.url.prev ? (
							<a href={page.url.prev} class="prev">
								&larr; prev
							</a>
						) : null
					}
				</div>
				<span>Page {page.currentPage} of {page.lastPage}</span>
				<div class="text-right">
					{
						page.url.next ? (
							<a href={page.url.next} class="next">
								next &rarr;
							</a>
						) : null
					}
				</div>
			</nav>
		</main>

		<Footer />
	</body>
</html>
