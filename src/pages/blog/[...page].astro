---
import { getCollection } from "astro:content";
import Card from "../../components/Card.astro";
import Layout from "../../layouts/Base.astro";

// getStaticPaths()で動的なルートを設定
export async function getStaticPaths({ paginate }) {
	const sortedPosts = (await getCollection("blog")).sort(
		(a, b) => b.data.date.valueOf() - a.data.date.valueOf(),
	);

	// 並び替えた投稿の配列から、1ページにX記事づつ入るようにページを生成
	return paginate(sortedPosts, { pageSize: 10 });
}

// paginate()関数を使用すると、各ページのデータはpageプロパティとして渡される
const { page } = Astro.props;
---

<Layout title=`Page ${page.currentPage} of ${page.lastPage}`>
	<section id="blog" class="container mx-auto">
		<div class="grid md:grid-cols-2 gap-8">
			{
				page.data.map((post) => (
					<Card
						title={post.data.title}
						date={post.data.date}
						updatedDate={post.data.updatedDate}
						heroImage={post.data.heroImage}
						id={post.id}
						tags={post.data.tags}
					/>
				))
			}
		</div>
	</section>

	<hr class="my-8" />

	<nav class="flex justify-between mt-16 items-center">
		<div class="text-left hover:underline">
			{page.url.prev ? <a href={page.url.prev}>&larr; prev</a> : null}
		</div>
		<span>Page {page.currentPage} of {page.lastPage}</span>
		<div class="text-right hover:underline">
			{page.url.next ? <a href={page.url.next}>next &rarr;</a> : null}
		</div>
	</nav>
</Layout>
